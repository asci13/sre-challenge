name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sre

    steps:
    - uses: actions/checkout@v3

    - name: Version repo
      uses: PaulHatch/semantic-version@v5.0.0-alpha2
      id: version
      with:
        bump_each_commit: true

    - name: Get version values
      run: echo '${{ steps.version.outputs.version }}'

    - name: Patch chart.yaml
      run: |
        sed -r 's/^(\s*)(version:.*$)/\1version: ${{ steps.version.outputs.version }}/' ./charts/sre-spec-chart/Chart.yaml
        sed -r 's/^(\s*)(appVersion:.*$)/\1appVersion: ${{ steps.version.outputs.version }}/' ./charts/sre-spec-chart/Chart.yaml

    - name: Set up Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.8.1

    - uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Set up chart-testing
      uses: helm/chart-testing-action@v2.2.1

    - name: Run chart-testing (lint)
      run: ct lint --target-branch ${{ github.event.repository.default_branch }}

    - name: Create kind cluster
      uses: helm/kind-action@v1.2.0
      if: steps.list-changed.outputs.changed == 'true'

    - name: Run chart-testing (install)
      run: ct install
    
      
    - name: Push dummy-pdf-or-png image
      uses: RafikFarhad/push-to-gcr-github-action@v4.1
      with:
        gcloud_service_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }} # can be base64 encoded or plain text
        registry: eu.gcr.io
        project_id: asci13-sre-challenge
        image_name: dummy-pdf-or-png
        image_tag: latest,${{ steps.version.outputs.version }}
        context: ./sre/dummy-pdf-or-png

    - name: Push frontend image
      uses: RafikFarhad/push-to-gcr-github-action@v4.1
      with:
        gcloud_service_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }} # can be base64 encoded or plain text
        registry: eu.gcr.io
        project_id: asci13-sre-challenge
        image_name: dummyfrontend
        image_tag: latest,${{ steps.version.outputs.version }}
        context: ./sre/dummyfrontend